kind: PersistentVolume
apiVersion: v1
metadata:
  name: mysql-pv-volume
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 2Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: '/mnt/data/mysql'

---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: mysql-pvc
  namespace: experiments
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi

---
kind: Secret
apiVersion: v1
metadata:
  name: mysql-secret
  namespace: experiments
data:
  mysql.password: bm1yb255

---
apiVersion: v1
kind: Service
metadata:
  name: mysql-single-instance-service
  namespace: experiments
spec:
  ports:
    - port: 3306
  selector:
    app: mysql
    tier: database
  clusterIP: None # this is optimal as we have only one pod. this makes DNS resolve to Pod IP directly

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-deployment
  namespace: experiments
spec:
  selector:
    matchLabels:
      app: mysql
      tier: database
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: mysql
        tier: database
    spec:
      volumes:
        - name: mysql-storage
          persistentVolumeClaim:
            claimName: mysql-pvc
      containers:
        - name: mysql-container
          image: mysql:5.6
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3306
              name: mysql-port
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: mysql.password
                  name: mysql-secret
          volumeMounts:
            - name: mysql-storage
              mountPath: /var/lib/mysql/
